<pre>
Clump Finding Problem: Find patterns forming clumps in a string.
     Input: A string Genome, and integers k, L, and t.
     Output: All distinct k-mers forming (L, t)-clumps in Genome.
     
Sample Input:
CGGACTCGACAGATGTGAAGAACGACAATGTGAAGACTCGACACGACAGAGTGAAGAGAAGAGGAAACATTGTAA
5 50 4
Sample Output:
CGACA GAAGA
</pre>
<?php 
set_time_limit (3000);
$text = "GGTACCAACGTCCTTCATTGAAGATTATTTTCACACCCTATGGGCGTTTAGGCTTGACCCCTTTAAACCTGTTCGATCGTTTCAGTATCGACTTTGGGCGGACAATGCAAGACCGCGCCGAGTGTTCCCGGTGCGCTCCACCCACTACTGAGGTGACAGATCTTCAGCACAAGGAGATAACTGTTGAAGATTTAGGATGGTTAGCAGCTTTGCTCACACCCTTGGGTTTGGTAGTGCGTACGCCCCACGTACTAGATCCTCCCGTAACGTTCAGGCGCAGAACCGTCGCTACGGCCCTGGTGGTTTGGGGAAGCGCGGGAATTTGGGTGAGGACTCATATTTTAGGAGGCAGCCGTATCCCAGTGAACCCCGCGGGAAAGGCTGGTACTCGCGATTAAGCTCAACGCAATCAGAGTCCGTAACGAAGGGCCTTGCCATTCCTTGCACTCCAAAGCAGCACACGAGATGAAGGTGCTGCAATCCATATAATTATTGCGTCGTTAACTGAACGATAGTTGGTTATGTCCGCATCAAGAGCTGGGAGTAGAGCGTAGCTTTCGAAGGACGTGACAAGCCGTGCCACCGCGCATCGGTGGATCCTGTTGCCCTCTCGTTCCCGATGATAAACCCGTACAGTCCGCCAGCTGCGTTAGATCTCTATCACACGGTGTTATTTATCTAAGAGGGGCACACTTCTAATGTAATGCCTAGCTCCCATAGGGAAACCCAGCAGAGTGACCGGCACCGCCCGGTAGCTGGTCTCAGGGTGAATACTTCGGGACCTCACCCCCCCCCTTCCGGGAAATACTCGCGTGTCTCCCTCTAAGCCCGAGACCCCGGAGATATCTCGGGACTGATTCTGAAAACAGAAGCCCTCGCCAGCGAGCGCTCAGATTGCATCGGTGTGCTAGGCTACTGTTACGGAGATCGGTGCTCCAGCCGGAAAGCGATTGGGCAACGCACTTTAGGCCTGTCAGATGACCCCTGAGAAAGCTCTCCAGTCAGAAAAGTCCCTTGACTTCGTGCAACTAGGGCACCACAGTCTTCACCGGTGACTAAGCTCCCTGCCGTGCTAGAGATATACTAGCCTCGTTTGCCCCTCTCCGGTGCCTTGTTAATGTTTTCCGCGCCGACGTAAATTGCGCCAGATTCAATCCATTGAAAGCGGTGCTGCCCCGCCCCGCCCAGAGTTCGTCTGTAGAGCCTGAGGAGCCGCATGAAGATTAGCGAGCGTCGGACCGCGGCTACTCCCCAGCTGCTATATTGCGATTCATCAGTATCCAGATTATAACCCATTCCCGGGATACTATTATCTACATTAGTAGTAACCCTATAAACAGGTTGATGGAACCTTTTACCAAGACGTTCCTCTTCTTAAATGCAGATCCTATGGCGGTACAGGGTCTCGGACTCGTTCCAACCATGACCGAAGATGCAAATATAAACGGCATGAGTTAAGCATATACACAACTTTCGTTGCACACAACGTCCTTCCCGTAAGCCGTGGTTACAACAGAATGGTAAATACGTGTCAGGGGTCTCCGCTTGATGAGCTATTCAGCTAAGAAATGCGTCACATAGCCAATAGCAATCCTACTCTACTTATCCCGGGCCTTATTTCGATTTGGGGCTCGATTCTACACTGAAGTCATGGCGCTCGTGCTCAATGTCGGAACCGTTTAGTCTCAATCCTAACACTGCGCTGGATGTTCCTAGAGGCGCGCCGCAATAGGGCTCTAGCCGTAACTCACTCCGCGAGGAGATGTGTCGCGTTGCATACTAGCCGCCGATCGGGTAAATTAGTGTTGATGAGGAGGCACATATTGACCGACCAGTGCATAGCATCACTAAGCGGGTCGGTGGCACATGAGATGTAAGCGACCCTTTTGCCGCAGTTTAGGCGGTGTTAATTGATTTTTCAACAGGATCACGTCAGACTTCTAGTTGATAGGATACTGAATTTTTATCCGCTGGATATAGCATACAAGATAGTTAAAGCACGTGTGTCATGGCAAGTGAGTGGTGAAAACGGCCCGTTTGAGTTTACTAATGAGCTAGGCCCCTAAAGAATGTCCATGTATTTACCATCAACGTATTAAAGGCAGTCACAGCCAATTGCCACGTGGACAGCGTGTCCCCCTGGCAGGATAGTGGTTACATAAGGCTCCAGTTGGGGGCTGTGACCAGCTGCGTGTACTAGTGAAGGGCGTGGCGGCTGATCCAGGAAGCAGCTTCTAGCAGCAACATTCATCATATAGGGTGAGGATATAATCAGTGAGGAACATTCATCATGGTGACATTCATCATAACATTACATTCATCATTAACGTACTTACATTCATCATATCACATTCATCATTAACAACATTCATCATAATCAGACATTCATCATAGCGATTATGTGCACTCTGACATTCATCATTCGGCGAAGCTGGGCACTCCTGCCATAGTGACATTCATCATTAAAACATAACATTCATCATCGCTGCACACGACAGGTGGCCTCAAGTTTAGAACATTCATCATTCATCATTATCCAATTCCCGCTCGCTTCTATGGTGACAACATTCATCATTTCATCATACATTCATCATCCATTGGTTACGACATTCATCATTTCATCATCTGATGGGAGACATTCATCATTTTGTAAAGGTTTCACAAAACTCACACCTGACGAACAGATCCAGCCGCGTAGTGAACATTCATCATTTCATCATTCATCGTTTACATTCATCATATGGACATTCATCATCGCTAACAACCGAACAATATAACATTCATCATCGAAGGCGACATTCATCATGGCGACATTCATCATGAGTTTCCGACAGGGGAACGCTTTGCAACTGGTAACTCGTACGGACGAGAGTGCCCCCCTGTACAGGTCCATGACTTGCGGCCGATGACGTTGCATTCATGCCCGACGCCTGATTTGTGTTGTGACTGCTATCATTGGTACAACTTCGATCAGTGGCACCGCGAAACCTTAAATATGCCCAGTATCGAGCACCAAAGCCCCACACTGGTTGTTCTATGTCTACATGAACCAGCGCTCTTAACAGCCGGTCTTGATACGTTTTCTAAGGGAGTGAAATGACAAGAACGTTTCTATCCCATAAAAGTATATCGCCAAAGGTGGGTTTTGGAAGCATATGGCTGCAGGCACTGGCTTAAAAGTACTTCGGTTGATCGAACTCACCTTCTATGAGCAAAAGCTAAAATTCTTCGGTTGCAAACCATCACTGACTCCGGCCTCGACGTAAGTCTTTGCGTTGCGTCGTCGGACGGTGAAGGTCGATAAATGGTATGCCGGACACATTGGGGAACACCCCGTTCCGCGAGGTACAACGGGCAGCTGGGCTGTAATGCCCTAACACCCCGTTAGAACACCCCGTTAGGGATGAACATCTCGAAGCGGGAATTCCTGGACTTCGCGCCAACACCCCGTTGAACACCCCAACACCCCGTTGGGGGTACTGCTTGCGTTAACACCCCGTTCGTTCGCCGGAACACCCCGTTCAACACAACACCCCGTTTCCCGTGTTGCTTAACACCCCGTTAACACCCCGTTGTCGCGCTGACCGAAACACCCCGAACAACACCCCGTTTGAGGTAGGATTTGGAGGTAGTTGTTCTAAATAGAACTGTGTTCCTGAAAAACACCCCGTTCACATGGGTAAACGGTCAACACCCCGTTCAGATTTGGGTTATCTTACCGTGGTCGTAACACCCCGTTCTGAACCGGTTGCGAACACCCCGTTTCTTCCAAAACACCCCGTTCCTAACACCAACACCCCGTTCCCCGTTACACCCCGTTTGCTAACACCAACACCCAACACCCCGTTCGAGACACCGTTCTGCGAGGAGCAGCCAGGGGGACGGAATCGCTAACACCCCGTTGGGTACATTCGGCGGCTAGTTCGGGAGGCGTTCAGACAAGTAGTCTCAAGTCCGTGTAAAGTATGTCGTATTGCCTTCTTTCTTGGCAGGTAGTTCAGCCTCGCCCTGTTGTTGCCTGCATAAGTTCAGCCTCAATTACTTTTCACTGCTTTCCTCGACGGGAACTGAGTAGTTCAGCCTCTAGTTCAGCCTCAGTTCAGCAGTTCAGCAGTTCAGCCTCACAAGTAGTTCAGCCTCTCAGTTCAGAGTTCAGCCTCGCGCTCCCATAGATAGTTCAGCCTCCTTTCGATGTATGCGATTAGTTCAGCCTCTGTTGACACCGAGCCAATTCAGTTCAGCCTCAGCCTCCCCCCGGCAGTTCAGTTCAGCCTCGAAAGTTCAGCCTCTGGAGTTCAGCCTCGGTATCGGCCGCTCTCCAACAAGTTCAGCAGTTCAGCCTCGCCTCCCTAGTTCAGCCTCAGCCTCGGAACCGTGCTCTGTTTTCTCTAACAACGGACGGTGCATTTTAACGCCGGTTACCCATCGTATGTGCCTCCGTAGCATCGTATGTGCGATCGTATGTGCCCTCGAGTTCAGCCTCATAGTTGTGCGCAGGCCCACTCACATGATCGTATGTGCTCGATCGTATGATCGTATGTGCTCGTATATCGTATGTGCAACCATATCGTATGTGCGCCGACGTGCGGTATAATCGTATGTGCACCACGTCCTACTCATCGTATGTGCCTTCATCGTATGTGCCTACGTAAGAAGCATTAAAGTTATGATCATCGTATGTGCAGATCGTATGTGCCATCGTATGTGCAAGGGAGAGACGAGCCGTTTTGCGAATCGTATGTGCGCTACAGATCGTATGTGCCATCGTATGTGCGCCAGTGAAGCAATCGTATGTGCCGTGATCCCCAGATATATCGTATGTGCTCAGTGTGATTCGCGCCTATGCATAACTCGTCAGGATTCGAAACAAACAATTGCTGGGCGGGCCGCCTTGCGCATCGTATGTGATATCGTATGTGCTCCCGATAGCGCAAAAGATCATCGTATGTGCGCTTCTCCACACTATCACATCGTATGTGCATGGCCATTGGCCCTGTTGATCGTATGTGCATCGTATGTGCTGAAGCCCTTTTATTTCCCCACTGGCTAATAGAACAGCTAAACATGAGGAGTCTAAGTTGAGGACCGATTAGTCCGGGGGGAAATTGTCCTTGTTACAATTCCGGACAAGACAAACATGAGCTATATGAGTCGGGGCGATTCGAGAGGGGACTGCTGCTTTTTGCCTAGCCGTCAGGGGGTCATGCACCAGATACCGTGAGGTTTGCAATGGAGTCCAATATATTGCTCTAGAGGGGAGCAGTCGCACGATACAGCAAGCGTACTTCCCCGATTGCTAGGAGCACCAGTTGGTGATAACATATTCAGTCCCACTACACATTGTCGGCGTAGACTTTCTATGACGTGCCGATGCGGTCCCATAATAGGGATTGATATGTGGCACTTTGAAAAGGCGGCCGCAAATATGAGGAAGGAGGCGATTAACGCACATAATAAATTGTTAGAGCGTTTTCAGCGCACATGCACATAATAAAGTGCACGGGTCGGTCAATGGTCTTACTGGCGGGGCACATAATAACACATAATAAATAAAGAACCTTTGAGCACATAGCACATAATAAAAGCAATAGACCATAGACCCGAACATCTGAGCTTTGCACAAGATAGACCCGAAAGAATAGACCCGAACATAATATAGACCCGAATAAAAGTGCACAGCATAGACCCGAAGGCACAATAGACCCGAAACATAATAATTGCATAGACCCGAAAACGCAATAGACCCGAATAATAAAATAGACCCGAAAAAGTTAATAGACCCGATAGACCCGAAAAACCCAGGCACATAATAAAACTTTGAACGGGCAACGCACAATAGACCCGAAATTCTTGTAGCACATAATAATTTCTGTTTCATAGACCCGAAATAATAAATTATAGACCCGAAAGATAGACCCGAATAACCCTCTCCACAACAAACGCACTCGAAAACGCACTCGAAGAAACGCACTCGACATAACGCAACGCACTCGAATTATATAGACCCGAAACGCACTCGACCGAAGAAAAATATAAAACGCACTCGACCCGAAATCGGGACTTGGGCTATCTTAAAAACGCACTCGACGAACGCACTCGAACGCCATAGACCCGAAGACCCGAACTTGTAAAACGCACTCGAACCCAACGCACTCGACGATGTGCATAGACCCGAACGCACTCGACGACCAGCACTATAGCAGCAGCTAGAACGCACAACGCACTCGACTTTATTTTGCCCTCTCAACGCACTCGAGTGAATTTAACGCACTCGAGTGACTTAGGGAAATAGCTTACGGACGCGTGCATGGCAACGCACTCGAACTCGATCTGGATAGTAATAGCCGCTGTAACGCAAACGCACTCGATCAATGTTTGGCATCTACGGTAACGCAAACGCACTCGATATTGCGAAATGCGGTACTATAAATAACGCACTCGACTCGACGAACCGTACCTTTATAAACGACGTACCATAACGAGACCGTTAACGCACTCGAAACGCACTCGATCGAATTGGAATGTCAAATTTGTACGCCGAACTACACGCCCAAAGTTGGTGTGTACATGGGCCGAGGACTCCCAAATTGGGTCGGCTGATTCAGTTGCCTAGCTAGGTTCTTCCAGTTTAGCCATGGGAGGTCTACAATATAAGTGCGAGTAGGCGGATCACAGCTTGGAGCGCCAGTTGGCTCATCAACGGTCCCAATTATACAGATACGCTATCGTACTAATACTTACCAGTATTCAAAGCTCACCGGTGGTTGCCAAGCTGGTAGATTGTCGCAAGGCAGTGTAGCGACAAATTTCAGACAGAGCGAGCACAGTAAATATAAGGAATGAAAGTAACGCCGGACACAAAACTTAGATTTGTCCGGGTACTCTCAGTCTCGCGCAAGTACAGAAATACAGAGCTCGTTGCAGTCGCCATGCTTACTAAGGTTCAGATCTCCGGCGAGGGCACTAGTAGACGACTAACTAATGTCAGGGAAAAGAATCTTGCTAATGTCAGGGCGCGTTAAGATTTTTGAGTTCGCAGCACTAATGTCTAATGTCAGGTCGAGACGGGCGGTGCTAATGCTAATGTCAGGAATACTCGAAACAGGCTCTAATGTCAGGCTAATGTCAGGGCACGCTGCTAATGTCAGGTAATAAACGCTGAAGATTACTAATGTCAGCTAATGTCCTAATGTCAGGTTTAGACTCCGGTCACGATACCTAATGTCAGGGCTCAGCTCGTCTTAGGGCAGGTCAGGATGGTTTCGACTGCCGTATTTTGCTCTAATGTGCTCGTCTTAGTCCTAATGTCAGGTTGCTCGTCGCTCGTCTTAGAGCTCGTCTTAGTCACGCTCGTCTTAGCGGCTGTAAATAAGTCTTGGGAGGGATGGCAATTCTCCGTATCCATTGTAAACCCTAATGTGCTCGTCTTAGTCGTCTTAGGTCTGCACTTGACGCGCTCGTCTTAGCTAATGTCAGGCCTAATGTCAGGCTCGTCTTAGGCTCGTCTTAGCTTATCCTCGGAGAAGCTCGTCGCTCGTCTTAGCTTAGCTCGTCTTAGTCGTCTTAGGAGCTCGTCTTAGCTTAGTCTTGCCGCTCGTCTTAGGGACGGACTAACGGCTCGTCTTAGGCACTCTGAAGATCGAAGATGAAGATCGGCTCGTCTTAGTCGCTGCTCGTCTTAGCGGGAAGATCGCTCGTCTTAGATCGAACCCGAAGATCGGAGCTCGTCTTAGACGACGGCTCGTCTTAGAGATCGGACGTGGAAGATCGGACATTACGCTCGGCGGCTCGTCTTAGCGTGCTCGTCTTAGAGCATACGCGTCTCTGATGCGAGCAAGATCGGACCACTTGATGCGTGATGCGAGCACAGAAGATCGGACCGCATTGTTTCCAGAAGATGAATGATGCGAGCATGATGCGAGCAGTGATGCGAGCATGATGATGCGAGCAAGCAATGATGCGAGCATCTGGACTGGACATCGGACCGTCTCTGGACGCGTCTCGTCTCTGGACTCTCGTCTCTGGACTCTCTGGACACGATGATGCGAGCAGCACGTTGATGCGAGCAAGTGTGATGCGAGCAGACGTCTCTGGACTGATGCGAGCATCTCTGTGATGCGAGCAAGCATCGTCTCTGATGCGAGCATGATGCGAGCAATGGCCTGTGAATTTTCCGTCTTGATGCGAGCAGGACTGAAGGGAGTAGCGGCCGTCTCTGGACTATCGTCTCCGTCTCTGGACCTGGACTATCCTTAGTAAGCGTCTCTGGTGATGCGAGCAACATGATGCGAGCAACCTTCGTCTCTGTGATGCGAGCTGATGCGAGCAGATGCGAGCACTCTTGATGCGTGATGCGAGCAACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACAACAAGCCTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCCCAACAAGCCTATACCTCAACAAGCCTATGATCGTACCTTGATCGTACCTTGATCGTACCTTGATCGCACAACAAGCCTAGGGCAACAAGCCTAAACTCAACAAGCCTAGCGTGGGACAACAAGCCTAACTGCAACAAGCCTAGCCTAGAACTGCGCAACAAGCCTAAGCCTACTGCGTGGGAACTGCGTGGGAACTGCGTGGGAACTGCGTGGGAACTGCGCAACAAGCCAACAAGCCTAAGCCTAGAACAACAAGCCTAAACAAGCCTACAACAAGCCTAACTGCGTGGGAACTCAACAAGCCTAGCGTGGGAACTGCGCAACAAGCCTACCTAGGTCCTCTTCAACAAGCCTAAGAACAGGTCCTCTTCACAACAAGCCTAACGTGGGAACTGCGTAGGTCCTCTTCTCCAACAAGAGGTCCTCTTCGTGGCAGAGGTCCTCTTCGCCTACAACAAGCCTAAGGTCCTCTTCAGGTCCTCTTCAGGTCCTCTTAGGTCCTCTTCCAGGTCCTCTTCAGGTCCTCTTCAGGTCCTCTTCAGGTCCTCTTCAGGTCCAAGGTCCTCTTCCTTCAGGTCCTCTTCAGGTCCTCTTCAGGTAGGTCCTCTTCCCTCTTCAGGTCAGGTCCTCTTCCTCTTCAGGTCCTCTTCAGGTCCTCTTCAGGTCCTCTTAGGTCCTCTTCCAGGTCCTCTTC";
$k = 11;
$L = 583;
$t = 17;

$clumps = sliceClumps($text, $L);
$patterns = searchClump($L, $t, $k, $clumps);
echo "<pre>";
print_r($patterns);
echo "</pre>";

function sliceClumps($text,$L){
    $clumps = array();
    for($i = 0; $i < strlen($text) - $L; $i++){
        array_push($clumps,substr($text, $i, $L));
    }
    return $clumps;
}

function searchClump($L, $t, $k, $clumps){
    $patterns = array();
    foreach ($clumps as $clump) {
        $answers = frequentWords($clump, $k, $t);
        foreach ($answers as $pattern) {
            if(!in_array($pattern, $patterns)){
                array_push($patterns, $pattern);
            }      
        }
    }
    return $patterns;
}

function patternCount($text, $pattern) {
    $count = 0;
    for ($i = 0; $i <= strlen($text) - strlen($pattern); $i++ ) {
        if(substr($text, $i, strlen($pattern)) == $pattern) {
            $count++;
        }
    } 
    return $count;
}

function frequentWords($text, $k, $t){
    $frequentPatterns = array();
    for ($i = 0; $i <= strlen($text) - $k; $i++) {
        $pattern = substr($text, $i, $k);
        $frequentPatterns[$pattern] = patternCount($text, $pattern);        
    }    
    array_multisort($frequentPatterns, SORT_DESC, SORT_NUMERIC);
    $max = $t;
    $answer = array();
    foreach ($frequentPatterns as $key => $value) {
        //echo $key . " =  " . $value . "<br />";
        if($max == $value) {
            array_push($answer,$key); 
        }
    }
    return ($answer);
}
?>     